{"ast":null,"code":"var _jsxFileName = \"/Users/MacBook/Desktop/todo/src/components/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  //we will check if user is tring to update then we will display the value from props otherwise we will display null or \"\"\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //useRef(initialValue) is a built-in React hook that accepts one argument as the initial value and returns a reference.\n  //A reference is an object having a single property “current”, which can be accessed and changed (mutated).\n  const inputRef = useRef(null);\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    // the preventDefault() method is used to prevent the default behavior of an event from occurring\n    e.preventDefault();\n\n    //here we have provided id as random number which will help us while updating or deleting the task\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo_form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"input-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"edit-button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add your plan to list\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"input-add\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"add-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"K4QCrzf09s5NXtNJn8d+NgaiLpk=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useRef","TodoForm","props","input","setInput","edit","value","inputRef","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["/Users/MacBook/Desktop/todo/src/components/TodoForm.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  //we will check if user is tring to update then we will display the value from props otherwise we will display null or \"\"\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //useRef(initialValue) is a built-in React hook that accepts one argument as the initial value and returns a reference.\n  //A reference is an object having a single property “current”, which can be accessed and changed (mutated).\n  const inputRef = useRef(null);\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    // the preventDefault() method is used to prevent the default behavior of an event from occurring\n    e.preventDefault();\n\n    //here we have provided id as random number which will help us while updating or deleting the task\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo_form\">\n      {/* In react we use \"?\" for conditional statement like if-else.\n       we have used, props.edit ?(if) show update button : (else) show Add button */}\n\n      {props.edit ? (\n        <>\n          <input\n            placeholder=\"Update your item\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            ref={inputRef}\n            className=\"input-edit\"\n          />\n          <button onClick={handleSubmit} className=\"edit-button\">\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder=\"Add your plan to list\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            className=\"input-add\"\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className=\"add-button\">\n            Add\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAEhD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;;EAEtE;EACA;EACA,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,YAAY,GAAIF,CAAC,IAAK;IAC1B;IACAA,CAAC,CAACG,cAAc,EAAE;;IAElB;IACAV,KAAK,CAACW,QAAQ,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEf;IACR,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,WAAW;IAAA,UAIxBF,KAAK,CAACG,IAAI,gBACT;MAAA,wBACE;QACE,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAEF,KAAM;QACb,QAAQ,EAAEK,YAAa;QACvB,IAAI,EAAC,MAAM;QACX,GAAG,EAAED,QAAS;QACd,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QACtB,eACF;QAAQ,OAAO,EAAEI,YAAa;QAAC,SAAS,EAAC,aAAa;QAAA,UAAC;MAEvD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBACR,gBAEH;MAAA,wBACE;QACE,WAAW,EAAC,uBAAuB;QACnC,KAAK,EAAER,KAAM;QACb,QAAQ,EAAEK,YAAa;QACvB,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,WAAW;QACrB,GAAG,EAAED;MAAS;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QAAQ,OAAO,EAAEI,YAAa;QAAC,SAAS,EAAC,YAAY;QAAA,UAAC;MAEtD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;EAEZ;IAAA;IAAA;IAAA;EAAA,QACI;AAEX;AAAC,GA7DQV,QAAQ;AAAA,KAARA,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}