{"ast":null,"code":"var _jsxFileName = \"/Users/MacBook/Downloads/to-do-list-main/src/components/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { MdOutlineEdit, MdDelete } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    todos,\n    updateTodo,\n    removeTodo,\n    completeTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n  };\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: todo.isComplete ? \"todo-complete\" : \"todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => completeTodo(todo.id),\n        children: todo.text\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => removeTodo(todo.id),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdOutlineEdit, {\n          onClick: () => setEdit({\n            id: todo.id,\n            value: todo.text\n          }),\n          className: \"edit-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false));\n}\n_s(TodoList, \"DJZiNdvmL+6jjh34b/0zH6N4WRE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","MdOutlineEdit","MdDelete","TodoList","todos","updateTodo","removeTodo","completeTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["/Users/MacBook/Downloads/to-do-list-main/src/components/TodoList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { MdOutlineEdit, MdDelete } from \"react-icons/md\";\n\nfunction TodoList({ todos, updateTodo, removeTodo, completeTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <>\n      <div\n        className={todo.isComplete ? \"todo-complete\" : \"todo-container\"}\n        key={index}\n      >\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n          {todo.text}\n        </div>\n\n        <div className=\"icons\">\n          <MdDelete\n            onClick={() => removeTodo(todo.id)}\n            className=\"delete-icon\"\n          />\n          <MdOutlineEdit\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\n            className=\"edit-icon\"\n          />\n        </div>\n      </div>\n    </>\n  ));\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC;AAAA;AAEzD,SAASC,QAAQ,OAAkD;EAAA;EAAA,IAAjD;IAAEC,KAAK;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAa,CAAC;EAC/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAID,KAAK,IAAK;IAC9BN,UAAU,CAACG,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;IAC1BF,OAAO,CAAC;MACNC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,IAAIH,IAAI,CAACE,EAAE,EAAE;IACX,oBAAO,QAAC,QAAQ;MAAC,IAAI,EAAEF,IAAK;MAAC,QAAQ,EAAEI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EACzD;EAEA,OAAOR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;IAAA,uBACE;MACE,SAAS,EAAED,IAAI,CAACE,UAAU,GAAG,eAAe,GAAG,gBAAiB;MAAA,wBAGhE;QAAmB,OAAO,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACJ,EAAE,CAAE;QAAA,UACrDI,IAAI,CAACG;MAAI,GADFH,IAAI,CAACJ,EAAE;QAAA;QAAA;QAAA;MAAA,QAEX,eAEN;QAAK,SAAS,EAAC,OAAO;QAAA,wBACpB,QAAC,QAAQ;UACP,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAE,CAAE;UACnC,SAAS,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QACvB,eACF,QAAC,aAAa;UACZ,OAAO,EAAE,MAAMD,OAAO,CAAC;YAAEC,EAAE,EAAEI,IAAI,CAACJ,EAAE;YAAEC,KAAK,EAAEG,IAAI,CAACG;UAAK,CAAC,CAAE;UAC1D,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA,GAfDF,KAAK;MAAA;MAAA;MAAA;IAAA;EAgBN,iBAET,CAAC;AACJ;AAAC,GAzCQZ,QAAQ;AAAA,KAARA,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}