{"ast":null,"code":"var _jsxFileName = \"/Users/MacBook/Downloads/to-do-list-main/src/components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  //function to add items once user click add button\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  //function to update items once user click update button\n  const updateTodo = (todoId, newValue) => {\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  //function to remove items once user click remove icons\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  //function to show items as completed once user click on completed task\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Add your Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      updateTodo: updateTodo,\n      removeTodo: removeTodo,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoForm","TodoList","Todo","todos","setTodos","addTodo","todo","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"sources":["/Users/MacBook/Downloads/to-do-list-main/src/components/Todo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\n\nfunction Todo() {\n  const [todos, setTodos] = useState([]);\n\n  //function to add items once user click add button\n  const addTodo = (todo) => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  //function to update items once user click update button\n  const updateTodo = (todoId, newValue) => {\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  //function to remove items once user click remove icons\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  //function to show items as completed once user click on completed task\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1 className=\"header\">Add your Plan for Today?</h1>\n\n      {/*once we display header to the webpage \n      we will pass the function as props to TodoForm and TodoList to display the data to user*/}\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList\n        todos={todos}\n        updateTodo={updateTodo}\n        removeTodo={removeTodo}\n        completeTodo={completeTodo}\n      />\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMM,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,QAAQ,GAAG,CAACD,IAAI,EAAE,GAAGH,KAAK,CAAC;IACjCC,QAAQ,CAACG,QAAQ,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,GAAGN,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMO,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACvCR,QAAQ,CAAES,IAAI,IACZA,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,IAAK,CAAC,CAC3D;EACH,CAAC;;EAED;EACA,MAAME,UAAU,GAAID,EAAE,IAAK;IACzB,MAAME,UAAU,GAAG,CAAC,GAAGf,KAAK,CAAC,CAACgB,MAAM,CAAEb,IAAI,IAAKA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;IAE9DZ,QAAQ,CAACc,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAME,YAAY,GAAIJ,EAAE,IAAK;IAC3B,IAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAG,CAAER,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACU,EAAE,KAAKA,EAAE,EAAE;QAClBV,IAAI,CAACgB,UAAU,GAAG,CAAChB,IAAI,CAACgB,UAAU;MACpC;MACA,OAAOhB,IAAI;IACb,CAAC,CAAC;IACFF,QAAQ,CAACiB,YAAY,CAAC;EACxB,CAAC;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,QAAQ;MAAA,UAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAK,eAKpD,QAAC,QAAQ;MAAC,QAAQ,EAAEhB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,QAAQ;MACP,KAAK,EAAEF,KAAM;MACb,UAAU,EAAEO,UAAW;MACvB,UAAU,EAAEO,UAAW;MACvB,YAAY,EAAEG;IAAa;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAnDQlB,IAAI;AAAA,KAAJA,IAAI;AAqDb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}